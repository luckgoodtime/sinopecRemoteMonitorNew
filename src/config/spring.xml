<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
	        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd       
	        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd       
	        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd  
	        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd"
	        default-lazy-init="true">

	<context:component-scan base-package="com.lng" />
	<!-- 配置aop-->
	<!-- <aop:aspectj-autoproxy proxy-target-class="true" />
	<bean class="com.lng.aop.LogAspect" /> --> 
	
	<!--  配置数据源 -->
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl"
			value="jdbc:mysql://localhost:3306/gasstation_cloud_db?autoReconnect=true" />
		<property name="user" value="root" />
		<property name="password" value="root" />
		<!-- 设置数据库连接池的最大连接数 -->
		<property name="maxPoolSize" value="100" />
		<!-- 设置数据库连接池的最小连接数 -->
		<property name="minPoolSize" value="5" />
		<!-- 设置数据库连接池的初始化连接数 -->
		<property name="initialPoolSize" value="5" />
		<!-- 设置数据库连接池的连接的最大空闲时间,单位为秒 -->
		<property name="maxIdleTime" value="20" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="5" />
		<!--每60秒检查所有连接池中的空闲连接。Default: 0
			<property name="idleConnectionTestPeriod" value="20"/> -->
	</bean>



	<!-- 配置SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">false</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.lng.model</value>
				<value>com.lng.smartlpg.model</value>
			</list>
		</property>
	</bean>
	<!--事务的配置 统一使用mxl配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="myPointcut" expression="execution(* com.lng.service..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="myPointcut" />
	</aop:config>

	<!-- 配置properties ，只能用在spring的配置文件中
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
        <property name="ignoreResourceNotFound" value="true" />
        <property name="locations">
            <list>
                <value>classpath*:config.properties</value>
            </list>
        </property>
    </bean>
    -->
    <!--  **************************************shiro配置*********************************************-->
    
    <!-- 項目自定义的Realm, 所有accountService依赖的dao都需要用depends-on声明 -->
	<bean id="myRealm" class="com.lng.shiro.MyRealm"/>
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myRealm"/>	
	</bean>
	
	<bean id="chainDefinitionSectionMetaSource" class="com.lng.shiro.ChainDefinitionSectionMetaSource">
		<property name="filterChainDefinitions">
			<value>
				<!--  URL匹配成功便不再继续匹配查找。所以要注意配置文件中的URL顺序，尤其在使用通配符时 -->
				/loginDo.do = anon
				/gasStation/acceptStationData.do = anon
				/smartlpg/** = anon
				/wx/** = anon
			
			</value>
		</property>
	</bean>

	<!-- 自定义鉴权拦截器 -->
	<bean id="URLPermissionsFilter" class="com.lng.shiro.URLPermissionsFilter" /> 
	<!-- Shiro Filter 拦截器相关配置 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login" />
		<property name="unauthorizedUrl" value="/jsp/error/unauthor.jsp" />
		<property name="filters">
			<map>
				<entry key="perms" value-ref="URLPermissionsFilter" />
			</map>
		</property>
		<property name="filterChainDefinitionMap" ref="chainDefinitionSectionMetaSource" />
	</bean>
	
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
    
    
  <!--  **************************************validator配置*********************************************-->
    <!-- 以下 validator  ConversionService 在使用 mvc:annotation-driven 会 自动注册-->
    <bean id="validator"
    	class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
    	<property name="providerClass"
    		value="org.hibernate.validator.HibernateValidator" />
    	<!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties 
    		<property name="validationMessageSource" ref="messageSource"/>-->
    </bean>
    <bean id="webBindingInitializer"
    	class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
    	<property name="conversionService" ref="conversionService" />
    	<property name="validator" ref="validator" />
    </bean>

</beans>